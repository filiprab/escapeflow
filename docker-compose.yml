services:
  postgres:
    image: postgres:17-alpine
    container_name: escapeflow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - escapeflow-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  db-init:
    build:
      context: .
      dockerfile: Dockerfile
      target: init
    container_name: escapeflow-db-init
    environment:
      DATABASE_URL: ${DATABASE_URL_DOCKER}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - escapeflow-network
    volumes:
      - ./scripts:/app/scripts
      - ./src/data:/app/src/data
    restart: "no"

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: escapeflow-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL_DOCKER}
      HOSTNAME: "0.0.0.0"
      PORT: 3000
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    networks:
      - escapeflow-network
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/run:noexec,nosuid,size=50m
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


volumes:
  postgres_data:
    driver: local

networks:
  escapeflow-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16